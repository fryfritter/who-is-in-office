{"version":3,"sources":["cal.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","require","Cal","state","currentMonth","Date","currentWeek","selectedDate","isLoading","allStaff","staffSchedule","isScheduleLoading","daysOfWeek","addSchedule","staffId","officeOn","a","console","log","post","resp","data","loadStaffSchedule","deleteSchedule","nextMonth","setState","addMonths","prevMonth","subMonths","nextWeek","addWeeks","prevWeek","subWeeks","this","loadStaff","get","dateFrom","dateTo","weekDateFormat","className","onClick","format","addDays","startOfWeek","endOfWeek","days","startDate","push","i","staffSchedules","map","staff","rowDetails","name","day","filter","schedule","id","length","renderHeader","renderDays","renderSchedules","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a732afb.chunk.js","sourcesContent":["import React from \"react\";\n// import addMonths from 'date-fns/addMonths'\n\nimport {\n  endOfWeek,\n  addDays,\n  startOfWeek,\n  format,\n  addMonths,\n  subMonths,\n  addWeeks,\n  subWeeks,\n} from \"date-fns\";\nconst axios = require(\"axios\");\n\nclass Cal extends React.Component {\n  state = {\n    currentMonth: new Date(),\n    currentWeek: new Date(),\n    selectedDate: new Date(),\n    isLoading: true,\n    allStaff: [],\n    staffSchedule: [],\n    isScheduleLoading: true,\n  };\n\n  componentDidMount() {\n    this.loadStaff();\n    this.loadStaffSchedule();\n  }\n\n  async loadStaff() {\n    // const url = api.staffApi + \"/staffList\";\n    const url = \"http://localhost:4000/api/staff/staffList\";\n\n    let resp = await axios.get(url, {});\n    // allStaff = resp.data;\n    console.log(resp.data);\n    // this.allStaff = resp.data;\n    this.setState({\n      allStaff: resp.data,\n      isLoading: false,\n    });\n  }\n\n  async loadStaffSchedule(dateFrom, dateTo) {\n    // const url = api.staffApi + \"/staffList\";\n    const url = \"http://localhost:4000/api/staff/staffSchedule\";\n\n    let resp = await axios.get(url, { dateFrom, dateTo });\n    // allStaff = resp.data;\n    // this.allStaff = resp.data;\n    this.setState({\n      staffSchedule: resp.data,\n    });\n  }\n\n  daysOfWeek = [];\n  renderHeader() {\n    const dateFormat = \"yyyy\";\n    const weekDateFormat = \"dd MMMM\";\n\n    return (\n      <div className=\"header row flex-middle\">\n        <div className=\"col col-start\">\n          <div className=\"icon\" onClick={this.prevWeek}>\n            chevron_left\n          </div>\n        </div>\n        <div className=\"col col-center\">\n          <span>{format(this.state.currentMonth, dateFormat)}</span>\n          <div>\n            {format(\n              addDays(startOfWeek(this.state.currentWeek), 1),\n              weekDateFormat\n            )}\n            - {format(endOfWeek(this.state.currentWeek), weekDateFormat)}\n          </div>\n        </div>\n        <div className=\"col col-end\" onClick={this.nextWeek}>\n          <div className=\"icon\">chevron_right</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dateFormat = \"EEEE\";\n    const dateMonthFormat = \"dd MMM\";\n    const dateMonthYearFormat = \"dd MMM yyyy\";\n    this.daysOfWeek = []; //reset days of week details\n\n    const days = [];\n\n    let startDate = startOfWeek(this.state.currentWeek);\n\n    days.push(<div className=\"col col-center\">Staff Name</div>);\n    for (let i = 1; i < 8; i++) {\n      this.daysOfWeek.push(format(addDays(startDate, i), dateMonthYearFormat));\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {format(addDays(startDate, i), dateFormat)} <br></br>\n          {format(addDays(startDate, i), dateMonthFormat)}\n        </div>\n      );\n    }\n\n    return <div className=\"row blue\">{days}</div>;\n  }\n\n  renderSchedules() {\n    // const allStaff2 = [\"Bruce\", \"Clark\", \"Diana\"];\n    console.log(\"Before calling load staff in schedule\");\n    // this.loadStaff();\n\n    let staffSchedules = [];\n    console.log(\"is the stage loading?\", this.state.isLoading);\n    if (!this.state.isLoading) {\n      staffSchedules = this.state.allStaff.map((staff) => {\n        let rowDetails = [];\n\n        console.log(\"calling me -\", staff);\n\n        rowDetails.push(<div className=\"col cell\">{staff.name}</div>);\n\n        console.log(\"now in days of week\", this.state.staffSchedule);\n\n        this.daysOfWeek.map((day) => {\n          let filtered = this.state.staffSchedule.filter(\n            (schedule) =>\n              schedule.staffId === staff.id &&\n              format(new Date(schedule.officeOn), \"dd MMM yyyy\") === day\n          );\n          if (filtered.length > 0)\n            rowDetails.push(\n              <div\n                className=\"col cell selected\"\n                onClick={() => this.deleteSchedule(staff.id, day)}\n              >\n                {\" \"}\n                Office{\" \"}\n              </div>\n            );\n          else\n            rowDetails.push(\n              <div\n                className=\"col cell\"\n                onClick={() => this.addSchedule(staff.id, day)}\n              >\n                {\" \"}\n                Home{\" \"}\n              </div>\n            );\n\n          return day;\n        });\n\n        return (\n          <div className=\"row\" key={staff.id}>\n            {rowDetails}\n          </div>\n        );\n      });\n    }\n\n    console.log(\"calling me -\", staffSchedules);\n    return <div className=\"body\">{staffSchedules}</div>;\n\n    // return <div className=\"body\">ss</div>;\n  }\n\n  addSchedule = async (staffId, officeOn) => {\n    console.log(\"add now\", staffId, officeOn);\n    const url = \"http://localhost:4000/api/staff/addSchedule\";\n    let resp = await axios.post(url, { staffId, officeOn });\n    console.log(\"response \", resp.data);\n    //call reload schedule\n    this.loadStaffSchedule();\n  };\n\n  deleteSchedule = async (staffId, officeOn) => {\n    console.log(\"remove now\", staffId, officeOn);\n    const url = \"http://localhost:4000/api/staff/deleteSchedule\";\n    let resp = await axios.post(url, { staffId, officeOn });\n    console.log(\"response \", resp.data);\n    //call reload schedule\n    this.loadStaffSchedule();\n  };\n\n  nextMonth = () => {\n    this.setState({\n      currentMonth: addMonths(this.state.currentMonth, 1),\n    });\n  };\n\n  prevMonth = () => {\n    this.setState({\n      currentMonth: subMonths(this.state.currentMonth, 1),\n    });\n  };\n\n  nextWeek = () => {\n    this.setState({\n      currentWeek: addWeeks(this.state.currentWeek, 1),\n    });\n  };\n\n  prevWeek = () => {\n    this.setState({\n      currentWeek: subWeeks(this.state.currentWeek, 1),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        {this.renderHeader()}\n        {this.renderDays()}\n        {this.renderSchedules()}\n      </div>\n    );\n  }\n}\n\nexport default Cal;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Cal from \"./cal\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cal></Cal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}